<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var uri = request.getRequestURI();
var uriMatcher = new URIMatcher(String(uri));

var log = new Log("api/policy-api.jag");

var constants = require("../modules/constants.js");
var policyModule = require("../modules/policy.js").policyModule;

var result, deviceType;
if (uriMatcher.match("/{context}/apis/policies/update")) {
	payload = request.getContent();
	policyModule.updatePolicyPriorities(payload);
} else if (uriMatcher.match("/{context}/apis/policies/add")) {
	var content = request.getContent();
	var policyName = content.policyName;
	var policyDefinition = content.profile.policyDefinition;
	var policyDescription = content.profile.policyDescription;
	deviceType = content.profile.deviceType.name;
	var deviceId = request.getParameter("deviceId");

	try {
		result = policyModule.addPolicy(policyName, deviceType, policyDefinition, policyDescription, deviceId);
	} catch (e) {
		log.error("Exception occurred while trying to add new policy under name:" + id, e);
		// http status code 500 refers to - Internal Server Error.
		result = 500;
	}
} else if (uriMatcher.match("/{context}/apis/policies/{deviceType}/{policyName}/remove")) {
	elements = uriMatcher.elements();
	var id = elements.policyName;
	deviceType = elements.deviceType;

	try {
		result = policyModule.removePolicy(id, deviceType);
	} catch (e) {
		log.error("Exception occurred while trying to remove policy under name:" + id, e);
		// http status code 500 refers to - Internal Server Error.
		result = 500;
	}
} else if (uriMatcher.match("/{context}/apis/policies/count")) {
	result = policyModule.getPolicies().length.toString();
}

// returning the result.
if (result) {
	response.content = result;
}
%>